name: "godot-ci export"
on: 
  push:
    branches:
          - release  # 仅在 release 分支 push 时触发
# NOTE: If your `project.godot` is at the repository root, set `PROJECT_PATH` below to ".".

env:
  GODOT_VERSION: 4.4
  EXPORT_NAME: test-project
  PROJECT_PATH: .

jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows

  export-linux:
    name: Linux Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: build/linux

  export-web:
    name: Web Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: |
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web

  deploy-itchio-linux:
    name: Deploy to Itch.io
    needs: export-linux  # 确保 Linux 版本导出完成后再执行
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download Linux Build
      uses: actions/download-artifact@v4
      with:
        name: linux
        path: build/linux
    
    - uses: yeslayla/butler-publish-itchio-action@master
      env:
        BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
        CHANNEL: linux
        ITCH_GAME: ${{ secrets.ITCHIO_GAME }}
        ITCH_USER: ${{ secrets.ITCHIO_USERNAME }}
        PACKAGE: build/linux

  deploy-itchio-windows:
    name: Deploy to Itch.io
    needs: export-windows  # 确保 windows 版本导出完成后再执行
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download windows Build
      uses: actions/download-artifact@v4
      with:
        name: windows
        path: build/windows
    
    - uses: yeslayla/butler-publish-itchio-action@master
      env:
        BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
        CHANNEL: windows
        ITCH_GAME: ${{ secrets.ITCHIO_GAME }}
        ITCH_USER: ${{ secrets.ITCHIO_USERNAME }}
        PACKAGE: build/windows

  deploy-itchio-web:
    name: Deploy to Itch.io
    needs: export-web  # 确保 web 版本导出完成后再执行
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download web Build
      uses: actions/download-artifact@v4
      with:
        name: web
        path: build/web
    
    - uses: yeslayla/butler-publish-itchio-action@master
      env:
        BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
        CHANNEL: HTML
        ITCH_GAME: ${{ secrets.ITCHIO_GAME }}
        ITCH_USER: ${{ secrets.ITCHIO_USERNAME }}
        PACKAGE: build/web
